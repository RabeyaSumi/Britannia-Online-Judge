-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Jan 16, 2024 at 05:08 AM
-- Server version: 10.4.28-MariaDB
-- PHP Version: 8.2.4

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `vlabreg`
--

-- --------------------------------------------------------

--
-- Table structure for table `archieve`
--

CREATE TABLE `archieve` (
  `id` int(11) NOT NULL,
  `pbname` varchar(100) DEFAULT NULL,
  `pbdes` longtext DEFAULT NULL,
  `pbauthor` varchar(100) DEFAULT NULL,
  `tc` mediumtext DEFAULT NULL,
  `output` mediumtext DEFAULT NULL,
  `uoutput` mediumtext DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

--
-- Dumping data for table `archieve`
--

INSERT INTO `archieve` (`id`, `pbname`, `pbdes`, `pbauthor`, `tc`, `output`, `uoutput`) VALUES
(1, 'Anonymous Information', '                                    Anonymous Informant\r\n                                time limit per test3 seconds\r\n                              memory limit per test512 megabytes\r\n\r\n\r\n\r\nYou are given an array b1,b2,…,bn\r\n.\r\n\r\nAn anonymous informant has told you that the array b\r\n was obtained as follows: initially, there existed an array a1,a2,…,an\r\n, after which the following two-component operation was performed k\r\n times:\r\n\r\nA fixed point†\r\n x\r\n of the array a\r\n was chosen.\r\nThen, the array a\r\n was cyclically shifted to the left‡\r\n exactly x\r\n times.\r\nAs a result of k\r\n such operations, the array b1,b2,…,bn\r\n was obtained. You want to check if the words of the anonymous informant can be true or if they are guaranteed to be false.\r\n\r\n†\r\nA number x\r\n is called a fixed point of the array a1,a2,…,an\r\n if 1?x?n\r\n and ax=x\r\n.\r\n\r\n‡\r\nA cyclic left shift of the array a1,a2,…,an\r\n is the array a2,…,an,a1\r\n.\r\n\r\nInput\r\nEach test contains multiple test cases. The first line contains an integer t\r\n (1?t?104\r\n) — the number of test cases. The description of the test cases follows.\r\n\r\nThe first line of each test case contains two integers n,k\r\n (1?n?2?105\r\n, 1?k?109\r\n) — the length of the array b\r\n and the number of operations performed.\r\n\r\nThe second line of each test case contains n\r\n integers b1,b2,…,bn\r\n (1?bi?109\r\n) — the elements of the array b\r\n.\r\n\r\nIt is guaranteed that the sum of the values of n\r\n for all test cases does not exceed 2?105\r\n.\r\n\r\nOutput\r\nFor each test case, output \"Yes\" if the words of the anonymous informant can be true, and \"No\" if they are guaranteed to be false.', 'Codeforces', NULL, NULL, NULL),
(2, 'IP Checking', 'An IP address is a 32 bit address formatted in the following way\r\n\r\na.b.c.d\r\n\r\nwhere a, b, c, d are integers each ranging from 0 to 255. Now you are given two IP addresses, first one in decimal form and second one in binary form, your task is to find if they are same or not.\r\n\r\nInput\r\nInput starts with an integer T (â‰¤ 100), denoting the number of test cases.\r\n\r\nEach case starts with two lines. First line contains an IP address in decimal form, and second line contains an IP address in binary form. In binary form, each of the four parts contains 8 digits. Assume that the given addresses are valid.\r\n\r\nOutput\r\nFor each case, print the case number and \"Yes\" if they are same, otherwise print \"No\".\r\n\r\nSample Input\r\n\r\n2\r\n192.168.0.100\r\n11000000.10101000.00000000.11001000\r\n65.254.63.122\r\n01000001.11111110.00111111.01111010\r\n\r\nOutput for Sample Input\r\n\r\nCase 1: No\r\nCase 2: Yes\r\n \r\n\r\nPROBLEM SETTER: JANE ALAM JAN', 'collected', '3\r\n80.239.242.53\r\n01010000.11101111.11110010.00110101\r\n118.98.235.40\r\n01000001.11111110.00111111.01111010\r\n141.0.11.253\r\n10001101.00000000.00001011.11111101', 'Case 1: Yes\r\nCase 2: No\r\nCase 3: Yes\r\n', 'Case 1: Yes\nCase 2: No\nCase 3: Yes\n'),
(3, 'Alice And ChessBoard', 'Itâ€™s Sunday afternoon, and Alice is in her room trying to figure out the rules of the game called Chess. She thinks sheâ€™s almost got it, but sheâ€™d like your help.\r\n\r\nAlice has placed a bishop on an empty chessboard. Given the position of the bishop and the positon of another square on the chessboard, Alice would like to know if the bishop can travel to that square in one move or not.\r\n\r\nChess is a game played on an 8*8 rectangular board. The rows of the board are numbered from 1â€¦8 and similarly the columns are numbered from 1â€¦8. (For this problem, you may assume that the rows are numbered from 1 to 8 from top to bottom and the columns are numbered from 1 to 8 from left to right). The bishop occupies a single square on the board (as does every other piece) and it can move any number of squares diagonally, but it cannot travel outside the board. Below is a picture demonstrating the moves of a bishop. The dotted squares are the squares the bishop can travel to in one move.\r\n\r\nlink\r\n\r\nInput\r\n\r\nIn the first line of input, there is a number T (1 â‰¤ T â‰¤ 200) denoting the number of test cases. Each of the next T lines contains the description of the T testcases. Each testcase contains four integers in a single line. The first two integer denotes the row and the column of the position of the bishop respectively and the second two integers denotes the row and the column of the postion of the targeted square respectively. It is guaranteed that the two squares wonâ€™t be the same. And of course, each of these integers will be between 1 and 8.\r\n\r\nOutput\r\n\r\nFor each test case, print â€œYesâ€ (without the quote) in a single line if the bishop can travel to the targeted square in one move. Otherwise print â€œNoâ€ (without the quote) in a single line.\r\n\r\nSample\r\n\r\nInput	\r\n3\r\n5 6 5 1\r\n1 1 2 3\r\n3 4 5 2\r\n\r\nOutput\r\n\r\nNo\r\nNo\r\nYes', 'collected', '3\r\n5 6 5 1\r\n1 1 2 3\r\n3 4 5 2', 'No\r\nNo\r\nYes\r\n', 'No\nNo\nYes\n'),
(4, 'Greetings', 'After that the code will select a random problem for you from my problems database based on your previously solved problems, your skills and your weaknesses. But while I was coding for implementing this great idea, I found that, all of my problems are scattered in 2 computers. So, I have to merge them before running my code.\r\n\r\nNow you are given the number of problems in each of the computers, you have to find the total number of problems. You can safely assume that no problem is stored in multiple computers. So, all the problems are distinct.\r\n\r\nInput\r\nInput starts with an integer T (â‰¤ 125), denoting the number of test cases.\r\n\r\nEach case starts with a line containing two integers a and b. a denotes the number of problems in the first computer and b denotes the number of problems in the second computer. You can safely assume that a and b will be non-negative and not greater than 10.\r\n\r\nOutput\r\nFor each case, print the case number and the total number of problems. See the samples for exact formatting.\r\n\r\nSample Input\r\n2\r\n1 7\r\n9 8\r\n\r\nOutput for Sample Input\r\n\r\nCase 1: 8\r\nCase 2: 17', 'collected', '2\r\n1 7\r\n9 8\r\n', 'Case 1: 8\r\nCase 2: 17\r\n', 'Case 1: 8\nCase 2: 17\n'),
(5, 'Prime generator', ' Peter wants to generate some prime numbers for his cryptosystem. Help him! Your task is to generate all prime numbers between two given numbers!\r\nInput\r\n\r\nThe input begins with the number t of test cases in a single line (t<=10). In each of the next t lines there are two numbers m and n (1 <= m <= n <= 1000000000, n-m<=100000) separated by a space.\r\nOutput\r\n\r\nFor every test case print all prime numbers p such that m <= p <= n, one number per line, test cases separated by an empty line.\r\nExample\r\n\r\nInput:\r\n2\r\n1 10\r\n3 5\r\n\r\nOutput:\r\n2\r\n3\r\n5\r\n7\r\n\r\n3\r\n5\r\n\r\nWarning: large Input/Output data, be careful with certain languages (though most should be OK if the algorithm is well designed)', 'shawon', '1\r\n100000500 100000600', '100000541\r\n100000543\r\n100000561\r\n100000567\r\n100000577\r\n', '100000541\n100000543\n100000561\n100000567\n100000577\n'),
(6, 'Chip and Ribbon', '                                  Chip and Ribbon\r\n                           time limit per test 2 seconds\r\n                       memory limit per test256 megabytes\r\n\r\n\r\nThere is a ribbon divided into n\r\n cells, numbered from 1\r\n to n\r\n from left to right. Initially, an integer 0\r\n is written in each cell.\r\n\r\nMonocarp plays a game with a chip. The game consists of several turns. During the first turn, Monocarp places the chip in the 1\r\n-st cell of the ribbon. During each turn except for the first turn, Monocarp does exactly one of the two following actions:\r\n\r\nmove the chip to the next cell (i.e. if the chip is in the cell i\r\n, it is moved to the cell i+1\r\n). This action is impossible if the chip is in the last cell;\r\nchoose any cell x\r\n and teleport the chip into that cell. It is possible to choose the cell where the chip is currently located.\r\nAt the end of each turn, the integer written in the cell with the chip is increased by 1\r\n.\r\n\r\nMonocarp\'s goal is to make some turns so that the 1\r\n-st cell contains the integer c1\r\n, the 2\r\n-nd cell contains the integer c2\r\n, ..., the n\r\n-th cell contains the integer cn\r\n. He wants to teleport the chip as few times as possible.\r\n\r\nHelp Monocarp calculate the minimum number of times he has to teleport the chip.\r\n\r\nInput\r\nThe first line contains one integer t\r\n (1?t?104\r\n) — the number of test cases.\r\n\r\nEach test case consists of two lines:\r\n\r\nthe first line contains one integer n\r\n (1<=n<=2*10^5\r\n);\r\nthe second line contains n\r\n integers c1,c2,…,cn\r\n (0<=ci<=10^9\r\n; ci>=1\r\n).\r\nIt can be shown that under these constraints, it is always possible to make a finite amount of turns so that the integers in the cells match the sequence c1,c2,…,cn\r\n.\r\n\r\nAdditional constraint on the input: the sum of values of n\r\n over all test cases does not exceed 2*10^5\r\n.\r\n\r\nOutput\r\nFor each test case, print one integer — the minimum number of times Monocarp has to teleport the chip.', 'Codeforces', '17\r\n1\r\n1\r\n1\r\n1\r\n1\r\n2\r\n1\r\n1\r\n2\r\n3 0\r\n2\r\n2 0\r\n2\r\n1 1\r\n2\r\n2 0\r\n2\r\n1 3\r\n2\r\n1 3\r\n2\r\n3 1\r\n2\r\n3 0\r\n2\r\n1 2\r\n2\r\n1 2\r\n3\r\n3 0 4\r\n3\r\n2 2 0\r\n3\r\n4 2 2\r\n', '0\r\n0\r\n1\r\n0\r\n2\r\n1\r\n0\r\n1\r\n2\r\n2\r\n2\r\n2\r\n1\r\n1\r\n6\r\n1\r\n3\r\n\r\n', '0\n0\n1\n0\n2\n1\n0\n1\n2\n2\n2\n2\n1\n1\n6\n1\n3\n'),
(7, 'Hunted House', '                                       Haunted House\r\n                                 time limit per test1 second\r\n                               memory limit per test256 megabytes\r\n\r\nYou are given a number in binary representation consisting of exactly n\r\n bits, possibly, with leading zeroes. For example, for n=5\r\n the number 6\r\n will be given as 00110\r\n, and for n=4\r\n the number 9\r\n will be given as 1001\r\n.\r\n\r\nLet\'s fix some integer i\r\n such that 1?i?n\r\n. In one operation you can swap any two adjacent bits in the binary representation. Your goal is to find the smallest number of operations you are required to perform to make the number divisible by 2i\r\n, or say that it is impossible.\r\n\r\nPlease note that for each 1?i?n\r\n you are solving the problem independently.\r\n\r\nInput\r\nEach test contains multiple test cases. The first line contains the number of test cases t\r\n (1?t?104\r\n). The description of the test cases follows.\r\n\r\nThe first line of each test case contains one integer n\r\n (1?n?105\r\n) — the length of the binary representation of the number.\r\n\r\nThe second line of each test case contains a string of length n\r\n, consisting of 0\r\n and 1\r\n, — the binary representation of the number.\r\n\r\nIt is guaranteed that the sum of n\r\n over all test cases does not exceed 2?105\r\n.\r\n\r\nOutput\r\nFor each test case, for each 1?i?n\r\n output the smallest number of operations required to make the number divisible by 2i\r\n, or output ?1\r\n if it is impossible.', 'Codeforces', '17\r\n4\r\n1110\r\n4\r\n0000\r\n4\r\n1000\r\n5\r\n11100\r\n5\r\n01100\r\n5\r\n00010\r\n5\r\n10010\r\n5\r\n00011\r\n5\r\n00110\r\n5\r\n10100\r\n5\r\n01111\r\n5\r\n01010\r\n5\r\n11011\r\n5\r\n11110\r\n5\r\n11010\r\n5\r\n10000\r\n5\r\n10101\r\n', '0 -1 -1 -1 \r\n0 0 0 0 \r\n0 0 0 -1 \r\n0 0 -1 -1 -1 \r\n0 0 2 -1 -1 \r\n0 1 2 3 -1 \r\n0 1 2 -1 -1 \r\n2 4 6 -1 -1 \r\n0 2 4 -1 -1 \r\n0 0 1 -1 -1 \r\n4 -1 -1 -1 -1 \r\n0 1 3 -1 -1 \r\n2 -1 -1 -1 -1 \r\n0 -1 -1 -1 -1 \r\n0 1 -1 -1 -1 \r\n0 0 0 0 -1 \r\n1 3 -1 -1 -1 \r\n', '0 -1 -1 -1 \r\n0 0 0 0 \r\n0 0 0 -1 \r\n0 0 -1 -1 -1 \r\n0 0 2 -1 -1 \r\n0 1 2 3 -1 \r\n0 1 2 -1 -1 \r\n2 4 6 -1 -1 \r\n0 2 4 -1 -1 \r\n0 0 1 -1 -1 \r\n4 -1 -1 -1 -1 \r\n0 1 3 -1 -1 \r\n2 -1 -1 -1 -1 \r\n0 -1 -1 -1 -1 \r\n0 1 -1 -1 -1 \r\n0 0 0 0 -1 \r\n1 3 -1 -1 -1 \r\n'),
(8, 'Helmets in Night Light', '                                Helmets in Night Light\r\n                              time limit per test1 second\r\n                            memory limit per test256 megabytes\r\n\r\nPak Chanek is the chief of a village named Khuntien. On one night filled with lights, Pak Chanek has a sudden and important announcement that needs to be notified to all of the n\r\n residents in Khuntien.\r\n\r\nFirst, Pak Chanek shares the announcement directly to one or more residents with a cost of p\r\n for each person. After that, the residents can share the announcement to other residents using a magical helmet-shaped device. However, there is a cost for using the helmet-shaped device. For each i\r\n, if the i\r\n-th resident has got the announcement at least once (either directly from Pak Chanek or from another resident), he/she can share the announcement to at most ai\r\n other residents with a cost of bi\r\n for each share.\r\n\r\nIf Pak Chanek can also control how the residents share the announcement to other residents, what is the minimum cost for Pak Chanek to notify all n\r\n residents of Khuntien about the announcement?\r\n\r\nInput\r\nEach test contains multiple test cases. The first line contains an integer t\r\n (1?t?104\r\n) — the number of test cases. The following lines contain the description of each test case.\r\n\r\nThe first line contains two integers n\r\n and p\r\n (1?n?105\r\n; 1?p?105\r\n) — the number of residents and the cost for Pak Chanek to share the announcement directly to one resident.\r\n\r\nThe second line contains n\r\n integers a1,a2,a3,…,an\r\n (1?ai?105\r\n) — the maximum number of residents that each resident can share the announcement to.\r\n\r\nThe third line contains n\r\n integers b1,b2,b3,…,bn\r\n (1?bi?105\r\n) — the cost for each resident to share the announcement to one other resident.\r\n\r\nIt is guaranteed that the sum of n\r\n over all test cases does not exceed 105\r\n.\r\n\r\nOutput\r\nFor each test case, output a line containing an integer representing the minimum cost to notify all n\r\n residents of Khuntien about the announcement.', 'Codeforces', NULL, NULL, NULL),
(9, 'Two Out of Three', '                                         Two Out of Three\r\n                                  time limit per test3 seconds\r\n                               memory limit per test512 megabytes\r\n\r\n\r\n\r\nYou are given an array a1,a2,…,an\r\n. You need to find an array b1,b2,…,bn\r\n consisting of numbers 1\r\n, 2\r\n, 3\r\n such that exactly two out of the following three conditions are satisfied:\r\n\r\nThere exist indices 1?i,j?n\r\n such that ai=aj\r\n, bi=1\r\n, bj=2\r\n.\r\nThere exist indices 1?i,j?n\r\n such that ai=aj\r\n, bi=1\r\n, bj=3\r\n.\r\nThere exist indices 1?i,j?n\r\n such that ai=aj\r\n, bi=2\r\n, bj=3\r\n.\r\nIf such an array does not exist, you should report it.\r\n\r\nInput\r\nEach test contains multiple test cases. The first line contains a single integer t\r\n (1?t?500)\r\n — the number of test cases. Each test case is described as follows.\r\n\r\nThe first line of each test case contains an integer n\r\n (1?n?100)\r\n — the length of the array a\r\n.\r\n\r\nThe second line of each test case contains n\r\n integers a1,a2,…,an\r\n (1?ai?100)\r\n — the elements of the array a\r\n.\r\n\r\nOutput\r\nFor each test case, print -1 if there is no solution. Otherwise, print b1,b2,…,bn\r\n — an array consisting of numbers 1\r\n, 2\r\n, 3\r\n that satisfies exactly two out of three conditions. If there are multiple possible answers, you can print any of them.', 'Codeforces', NULL, NULL, NULL),
(10, 'Pepe Racing', '                                              Pepe Racing\r\n                                      time limit per test5 seconds\r\n                                    memory limit per test256 megabytes\r\n\r\n\r\n\r\nThis is an interactive problem.\r\n\r\nThere are n2\r\n pepes labeled 1,2,…,n2\r\n with pairwise distinct speeds. You would like to set up some races to find out the relative speed of these pepes.\r\n\r\nIn one race, you can choose exactly n\r\n distinct pepes and make them race against each other. After each race, you will only know the fastest pepe of these n\r\n pepes.\r\n\r\nCan you order the n2?n+1\r\n fastest pepes in at most 2n2?2n+1\r\n races? Note that the slowest n?1\r\n pepes are indistinguishable from each other.\r\n\r\nNote that the interactor is adaptive. That is, the relative speeds of the pepes are not fixed in the beginning and may depend on your queries. But it is guaranteed that at any moment there is at least one initial configuration of pepes such that all the answers to the queries are consistent.\r\n\r\nInput\r\nEach test contains multiple test cases. The first line contains the number of test cases t\r\n (1?t?104\r\n). The description of the test cases follows.\r\n\r\nThe only line of each test case contains a single integer n\r\n (2?n?20\r\n) — the number of pepes in one race.\r\n\r\nAfter reading the integer n\r\n for each test case, you should begin the interaction.\r\n\r\nIt is guaranteed that the sum of n3\r\n over all test cases does not exceed 3?105\r\n.\r\n\r\nInteraction\r\nTo set up a race, print a line with the following format:\r\n\r\n?x1x2…xn\r\n (1?xi?n2\r\n, xi\r\n are pairwise distinct) — the labels of the pepes in the race.\r\nAfter each race, you should read a line containing a single integer p\r\n (1?p?n2\r\n) — the label of the fastest pepe in the race.\r\n\r\nWhen you know the n2?n+1\r\n fastest pepes, print one line in the following format:\r\n\r\n!p1p2…pn2?n+1\r\n (1?pi?n2\r\n, pi\r\n are pairwise distinct)\r\nwhere p\r\n is the sequence of these pepe\'s labels in descending order of speed.\r\nAfter that, move on to the next test case, or terminate the program if no more test cases are remaining.\r\n\r\nIf your program performs more than 2n2?2n+1\r\n races for one test case or makes an invalid race, you may receive a Wrong Answer verdict.\r\n\r\nAfter printing a query do not forget to output the end of the line and flush the output. Otherwise, you will get Idleness limit exceeded. To do this, use:\r\n\r\nfflush(stdout) or cout.flush() in C++;\r\nSystem.out.flush() in Java;\r\nflush(output) in Pascal;\r\nstdout.flush() in Python;\r\nsee the documentation for other languages.\r\nHack format\r\n\r\nFor hacks, use the following format.\r\n\r\nThe first line should contain t\r\n — the number of test cases.\r\n\r\nThe first line of each test case should contain an integer n\r\n followed by the string manual.\r\n\r\nThe second line of each test case should contain a permutation a1,a2,…,an2\r\n of the integers from 1\r\n to n2\r\n. ai>aj\r\n if and only if pepe i\r\n has a faster speed than pepe j\r\n.\r\n\r\nAs an example, the hack format for the example input is:12 manual1 2 3 4', NULL, NULL, NULL, NULL),
(11, 'Colorful Constructive', '                                          Colorful Constructive\r\n                                         time limit per test3 seconds\r\n                                      memory limit per test512 megabytes\r\n\r\n\r\n\r\nYou have n\r\n colored cubes, the i\r\n-th cube has color ai\r\n.\r\n\r\nYou need to distribute all the cubes on shelves. There are a total of m\r\n shelves, the i\r\n-th shelf can hold si\r\n cubes. Also, s1+s2+…+sm=n\r\n.\r\n\r\nSuppose on a shelf of size k\r\n there are cubes of colors c1,c2,…,ck\r\n, in this order. Then we define the colorfulness of the shelf as the minimum distance between two different cubes of the same color on the shelf. If all the cubes on the shelf have different colors, then the colorfulness is considered to be equal to the size of the shelf, that is, the number k\r\n.\r\n\r\nMore formally, the colorfulness of c1,c2,…,ck\r\n is defined as follows:\r\n\r\nIf all the colors c1,c2,…,ck\r\n are different, the colorfulness is considered to be k\r\n.\r\nOtherwise, the colorfulness is considered to be the smallest integer x?1\r\n such that there exists an index i\r\n (1?i?k?x)\r\n such that ci=ci+x\r\n.\r\nFor each shelf, you are given the minimum required colorfulness, that is, you are given numbers d1,d2,…,dm\r\n, which mean that shelf i\r\n must have a colorfulness ?di\r\n for all i\r\n.\r\n\r\nDistribute the available cubes among the shelves to ensure the required colorfulness, or report that it is impossible.\r\n\r\nInput\r\nEach test contains multiple test cases. The first line contains a single integer t\r\n (1?t?104)\r\n — the number of test cases. The description of the test cases follows.\r\n\r\nThe first line of each test case contains two integers n,m\r\n (1?m?n?2?105)\r\n — the number of cubes and the number of shelves to distribute them to.\r\n\r\nThe second line of each test case contains n\r\n integers a1,a2,…,an\r\n (1?ai?n)\r\n — the colors of the cubes.\r\n\r\nThe third line of each test case contains m\r\n integers s1,s2,…,sm\r\n (1?si?n)\r\n — the sizes of the shelves. It\'s guaranteed, that s1+…+sm=n\r\n.\r\n\r\nThe fourth line of each test case contains m\r\n integers d1,d2,…,dm\r\n (1?di?si)\r\n — the minimum required colorfulness of the shelves.\r\n\r\nIt is guaranteed that the sum of n\r\n over all test cases does not exceed 2?105\r\n.\r\n\r\nOutput\r\nFor each test case, if it is impossible to distribute the cubes on the shelves satisfying all the requirements, output a single number ?1\r\n. Otherwise, output m\r\n lines, where the i\r\n-th line should contain si\r\n numbers representing the colors of the cubes on the i\r\n-th shelf, in the appropriate order.', NULL, NULL, NULL, NULL),
(12, 'Freedom of Choice', '                                      Freedom of Choice\r\n                               time limit per test3 seconds\r\n                              memory limit per test512 megabytes\r\n\r\n\r\n\r\nLet\'s define the anti-beauty of a multiset {b1,b2,…,blen}\r\n as the number of occurrences of the number len\r\n in the multiset.\r\n\r\nYou are given m\r\n multisets, where the i\r\n-th multiset contains ni\r\n distinct elements, specifically: ci,1\r\n copies of the number ai,1\r\n, ci,2\r\n copies of the number ai,2,…,ci,ni\r\n copies of the number ai,ni\r\n. It is guaranteed that ai,1<ai,2<…<ai,ni\r\n. You are also given numbers l1,l2,…,lm\r\n and r1,r2,…,rm\r\n such that 1?li?ri?ci,1+…+ci,ni\r\n.\r\n\r\nLet\'s create a multiset X\r\n, initially empty. Then, for each i\r\n from 1\r\n to m\r\n, you must perform the following action exactly once:\r\n\r\nChoose some vi\r\n such that li?vi?ri\r\nChoose any vi\r\n numbers from the i\r\n-th multiset and add them to the multiset X\r\n.\r\nYou need to choose v1,…,vm\r\n and the added numbers in such a way that the resulting multiset X\r\n has the minimum possible anti-beauty.\r\n\r\nInput\r\nEach test consists of multiple test cases. The first line contains a single integer t\r\n (1?t?104\r\n) — the number of test cases. The description of the test cases follows.\r\n\r\nThe first line of each test case contains a single integer m\r\n (1?m?105\r\n) — the number of given multisets.\r\n\r\nThen, for each i\r\n from 1\r\n to m\r\n, a data block consisting of three lines is entered.\r\n\r\nThe first line of each block contains three integers ni,li,ri\r\n (1?ni?105,1?li?ri?ci,1+…+ci,ni?1017\r\n) — the number of distinct numbers in the i\r\n-th multiset and the limits on the number of elements to be added to X\r\n from the i\r\n-th multiset.\r\n\r\nThe second line of the block contains ni\r\n integers ai,1,…,ai,ni\r\n (1?ai,1<…<ai,ni?1017\r\n) — the distinct elements of the i\r\n-th multiset.\r\n\r\nThe third line of the block contains ni\r\n integers ci,1,…,ci,ni\r\n (1?ci,j?1012\r\n) — the number of copies of the elements in the i\r\n-th multiset.\r\n\r\nIt is guaranteed that the sum of the values of m\r\n for all test cases does not exceed 105\r\n, and also the sum of ni\r\n for all blocks of all test cases does not exceed 105\r\n.\r\n\r\nOutput\r\nFor each test case, output the minimum possible anti-beauty of the multiset X\r\n that you can achieve.', NULL, NULL, NULL, NULL),
(13, 'Card Game', '                                        Card Game\r\n                                 time limit per test2 seconds\r\n                              memory limit per test256 megabytes\r\n\r\n\r\nThere are n\r\n cards stacked in a deck. Initially, ai\r\n is written on the i\r\n-th card from the top. The value written on a card does not change.\r\n\r\nYou will play a game. Initially your score is 0\r\n. In each turn, you can do one of the following operations:\r\n\r\nChoose an odd†\r\n positive integer i\r\n, which is not greater than the number of cards left in the deck. Remove the i\r\n-th card from the top of the deck and add the number written on the card to your score. The remaining cards will be reindexed starting from the top.\r\nChoose an even‡\r\n positive integer i\r\n, which is not greater than the number of cards left in the deck. Remove the i\r\n-th card from the top of the deck. The remaining cards will be reindexed starting from the top.\r\nEnd the game. You can end the game whenever you want, you do not have to remove all cards from the initial deck.\r\nWhat is the maximum score you can get when the game ends?\r\n\r\n†\r\n An integer i\r\n is odd, if there exists an integer k\r\n such that i=2k+1\r\n.\r\n\r\n‡\r\n An integer i\r\n is even, if there exists an integer k\r\n such that i=2k\r\n.\r\n\r\nInput\r\nEach test contains multiple test cases. The first line contains the number of test cases t\r\n (1?t?104\r\n). The description of the test cases follows.\r\n\r\nThe first line of each test case contains a single integer n\r\n (1?n?2?105\r\n).\r\n\r\nThe second line of each test case contains n\r\n integers a1,a2,…,an\r\n (?109?ai?109\r\n).\r\n\r\nIt is guaranteed that the sum of n\r\n over all test cases does not exceed 2?105\r\n.\r\n\r\nOutput\r\nFor each test case, print a single integer — the maximum score you can get when the game ends', 'Codeforces', NULL, NULL, NULL),
(14, 'Divide and Equalize', '                                           Divide and Equalize\r\n                                      time limit per test2 seconds\r\n                                     memory limit per test256 megabytes\r\n\r\n\r\nYou are given an array a\r\n consisting of n\r\n positive integers. You can perform the following operation on it:\r\n\r\nChoose a pair of elements ai\r\n and aj\r\n (1?i,j?n\r\n and i?j\r\n);\r\nChoose one of the divisors of the integer ai\r\n, i.e., an integer x\r\n such that aimodx=0\r\n;\r\nReplace ai\r\n with aix\r\n and aj\r\n with aj?x\r\n.\r\nDetermine whether it is possible to make all elements in the array the same by applying the operation a certain number of times (possibly zero).\r\nFor example, let\'s consider the array a\r\n = [100,2,50,10,1\r\n] with 5\r\n elements. Perform two operations on it:\r\n\r\nChoose a3=50\r\n and a2=2\r\n, x=5\r\n. Replace a3\r\n with a3x=505=10\r\n, and a2\r\n with a2?x=2?5=10\r\n. The resulting array is a\r\n = [100,10,10,10,1\r\n];\r\nChoose a1=100\r\n and a5=1\r\n, x=10\r\n. Replace a1\r\n with a1x=10010=10\r\n, and a5\r\n with a5?x=1?10=10\r\n. The resulting array is a\r\n = [10,10,10,10,10\r\n].\r\nAfter performing these operations, all elements in the array a\r\n become equal to 10\r\n.\r\nInput\r\nThe first line of the input contains a single integer t\r\n (1?t?2000\r\n) — the number of test cases.\r\n\r\nThen follows the description of each test case.\r\n\r\nThe first line of each test case contains a single integer n\r\n (1?n?104\r\n) — the number of elements in the array a\r\n.\r\n\r\nThe second line of each test case contains exactly n\r\n integers ai\r\n (1?ai?106\r\n) — the elements of the array a\r\n.\r\n\r\nIt is guaranteed that the sum of n\r\n over all test cases does not exceed 104\r\n.\r\n\r\nOutput\r\nFor each test case, output a single line:\r\n\r\n\"YES\" if it is possible to make all elements in the array equal by applying the operation a certain (possibly zero) number of times;\r\n\"NO\" otherwise.\r\nYou can output the answer in any case (for example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will all be recognized as a positive answer).', NULL, NULL, NULL, NULL),
(15, 'Don\'t Try to Count', '                                           Don\'t Try to Count\r\n                                     time limit per test2 seconds\r\n                                   memory limit per test256 megabytes\r\n\r\n\r\n\r\nGiven a string x\r\n of length n\r\n and a string s\r\n of length m\r\n (n?m?25\r\n), consisting of lowercase Latin letters, you can apply any number of operations to the string x\r\n.\r\n\r\nIn one operation, you append the current value of x\r\n to the end of the string x\r\n. Note that the value of x\r\n will change after this.\r\n\r\nFor example, if x=\r\n\"aba\", then after applying operations, x\r\n will change as follows: \"aba\" ?\r\n \"abaaba\" ?\r\n \"abaabaabaaba\".\r\n\r\nAfter what minimum number of operations s\r\n will appear in x\r\n as a substring? A substring of a string is defined as a contiguous segment of it.\r\n\r\nInput\r\nThe first line of the input contains a single integer t\r\n (1?t?104\r\n) — the number of test cases.\r\n\r\nThe first line of each test case contains two numbers n\r\n and m\r\n (1?n?m?25\r\n) — the lengths of strings x\r\n and s\r\n, respectively.\r\n\r\nThe second line of each test case contains the string x\r\n of length n\r\n.\r\n\r\nThe third line of each test case contains the string s\r\n of length m\r\n.\r\n\r\nOutput\r\nFor each test case, output a single number — the minimum number of operations after which s\r\n will appear in x\r\n as a substring. If this is not possible, output ?1\r\n.', NULL, NULL, NULL, NULL),
(16, 'Queue Sort', '                                         Queue Sort\r\n                                time limit per test1 second\r\n                              memory limit per test256 megabytes\r\n\r\n\r\n\r\nVlad found an array a\r\n of n\r\n integers and decided to sort it in non-decreasing order.\r\n\r\nTo do this, Vlad can apply the following operation any number of times:\r\n\r\nExtract the first element of the array and insert it at the end;\r\nSwap that element with the previous one until it becomes the first or until it becomes strictly greater than the previous one.\r\nNote that both actions are part of the operation, and for one operation, you must apply both actions.\r\n\r\nFor example, if you apply the operation to the array [4,3,1,2,6,4], it will change as follows:\r\n\r\n[4,3,1,2,6,4];\r\n[3,1,2,6,4,4];\r\n[3,1,2,6,4,4];\r\n[3,1,2,4,6,4].\r\nVlad doesn\'t have time to perform all the operations, so he asks you to determine the minimum number of operations required to sort the array or report that it is impossible.\r\n\r\nInput\r\nThe first line of the input contains a single integer t\r\n (1?t?104\r\n) — the number of test cases. Descriptions of the test cases follow.\r\n\r\nThe first line of each test case contains a single integer n\r\n (1?n?2?105\r\n) — the length of the array.\r\n\r\nThe second line of each test case contains n\r\n integers a1,a2,a3,…,an\r\n (1?ai?109\r\n) — the elements of the array.\r\n\r\nIt is guaranteed that the sum of n\r\n over all testcases does not exceed 2?105\r\n.\r\n\r\nOutput\r\nFor each test case, output a single integer — the minimum number of operations needed to sort the array. If it is impossible to do so, output ?1\r\n as the answer.', NULL, NULL, NULL, NULL),
(17, 'Fancy Arrays', '                                          Fancy Arrays\r\n                                  time limit per test4 seconds\r\n                                  memory limit per test512 megabytes\r\n\r\n\r\n\r\nLet\'s call an array a\r\n of n\r\n non-negative integers fancy if the following conditions hold:\r\n\r\nat least one from the numbers x\r\n, x+1\r\n, ..., x+k?1\r\n appears in the array;\r\nconsecutive elements of the array differ by at most k\r\n (i.e. |ai?ai?1|?k\r\n for each i?[2,n]\r\n).\r\nYou are given n\r\n, x\r\n and k\r\n. Your task is to calculate the number of fancy arrays of length n\r\n. Since the answer can be large, print it modulo 109+7\r\n.\r\n\r\nInput\r\nThe first line contains a single integer t\r\n (1?t?50\r\n) — the number of test cases.\r\n\r\nThe only line of each test case contains three integers n\r\n, x\r\n and k\r\n (1?n,k?109\r\n; 0?x?40\r\n).\r\n\r\nOutput\r\nFor each test case, print a single integer — the number of fancy arrays of length n\r\n, taken modulo 109+7\r\n.', NULL, NULL, NULL, NULL),
(18, 'Torn Lucky Ticket', '                                  Torn Lucky Ticket\r\n                               time limit per test2 seconds\r\n                         memory limit per test512 megabytes\r\n\r\n\r\n\r\nA ticket is a non-empty string of digits from 1\r\n to 9\r\n.\r\n\r\nA lucky ticket is such a ticket that:\r\n\r\nit has an even length;\r\nthe sum of digits in the first half is equal to the sum of digits in the second half.\r\nYou are given n\r\n ticket pieces s1,s2,…,sn\r\n. How many pairs (i,j)\r\n (for 1?i,j?n\r\n) are there such that si+sj\r\n is a lucky ticket? Note that it\'s possible that i=j\r\n.\r\n\r\nHere, the + operator denotes the concatenation of the two strings. For example, if si\r\n is 13, and sj\r\n is 37, then si+sj\r\n is 1337.\r\n\r\nInput\r\nThe first line contains a single integer n\r\n (1?n?2?105\r\n) — the number of ticket pieces.\r\n\r\nThe second line contains n\r\n non-empty strings s1,s2,…,sn\r\n, each of length at most 5\r\n and consisting only of digits from 1\r\n to 9\r\n.\r\n\r\nOutput\r\nPrint a single integer — the number of pairs (i,j)\r\n (for 1?i,j?n\r\n) such that si+sj\r\n is a lucky ticket.', 'Codeforces', NULL, NULL, NULL),
(19, 'Neutral Tonality', '                                        Neutral Tonality\r\n                             time limit per test3 seconds\r\n                              memory limit per test512 megabytes\r\n\r\n\r\n\r\nYou are given an array a\r\n consisting of n\r\n integers, as well as an array b\r\n consisting of m\r\n integers.\r\n\r\nLet LIS(c)\r\n denote the length of the longest increasing subsequence of array c\r\n. For example, LIS([2,1–,1,3–])\r\n = 2\r\n, LIS([1–,7–,9–])\r\n = 3\r\n, LIS([3,1–,2–,4–])\r\n = 3\r\n.\r\n\r\nYou need to insert the numbers b1,b2,…,bm\r\n into the array a\r\n, at any positions, in any order. Let the resulting array be c1,c2,…,cn+m\r\n. You need to choose the positions for insertion in order to minimize LIS(c)\r\n.\r\n\r\nFormally, you need to find an array c1,c2,…,cn+m\r\n that simultaneously satisfies the following conditions:\r\n\r\nThe array a1,a2,…,an\r\n is a subsequence of the array c1,c2,…,cn+m\r\n.\r\nThe array c1,c2,…,cn+m\r\n consists of the numbers a1,a2,…,an,b1,b2,…,bm\r\n, possibly rearranged.\r\nThe value of LIS(c)\r\n is the minimum possible among all suitable arrays c\r\n.\r\nInput\r\nEach test contains multiple test cases. The first line contains a single integer t\r\n (1?t?104)\r\n — the number of test cases. The description of the test cases follows.\r\n\r\nThe first line of each test case contains two integers n,m\r\n (1?n?2?105,1?m?2?105)\r\n — the length of array a\r\n and the length of array b\r\n.\r\n\r\nThe second line of each test case contains n\r\n integers a1,a2,…,an\r\n (1?ai?109)\r\n — the elements of the array a\r\n.\r\n\r\nThe third line of each test case contains m\r\n integers b1,b2,…,bm\r\n (1?bi?109)\r\n — the elements of the array b\r\n.\r\n\r\nIt is guaranteed that the sum of n\r\n over all test cases does not exceed 2?105\r\n, and the sum of m\r\n over all test cases does not exceed 2?105\r\n.\r\n\r\nOutput\r\nFor each test case, output n+m\r\n numbers — the elements of the final array c1,c2,…,cn+m\r\n, obtained after the insertion, such that the value of LIS(c)\r\n is minimized. If there are several answers, you can output any of them.', 'Codeforces', NULL, NULL, NULL),
(20, 'Google feeling lucky.', 'Google is one of the most famous Internet search engines which hosts and develops a number of Internetbased\r\nservices and products. On its search engine website, an interesting button â€˜Iâ€™m feeling luckyâ€™\r\nattracts our eyes. This feature could allow the user skip the search result page and goes directly to the\r\nfirst ranked page. Amazing! It saves a lot of time.\r\nThe question is, when one types some keywords and presses â€˜Iâ€™m feeling luckyâ€™ button, which web\r\npage will appear? Google does a lot and comes up with excellent approaches to deal with it. In this\r\nsimplified problem, let us just consider that Google assigns every web page an integer-valued relevance.\r\nThe most related page will be chosen. If there is a tie, all the pages with the highest relevance are\r\npossible to be chosen.\r\nYour task is simple, given 10 web pages and their relevance. Just pick out all the possible candidates\r\nwhich will be served to the user when â€˜Iâ€™m feeling luckyâ€™.\r\nInput\r\nThe input contains multiple test cases. The number of test cases T is in the first line of the input file.\r\nFor each test case, there are 10 lines, describing the web page and the relevance. Each line contains\r\na character string without any blank characters denoting the URL of this web page and an integer\r\nVi denoting the relevance of this web page. The length of the URL is between 1 and 100 inclusively.\r\n(1 â‰¤ Vi â‰¤ 100)\r\nOutput\r\nFor each test case, output several lines which are the URLs of the web pages which are possible to be\r\nchosen. The order of the URLs is the same as the input. Please look at the sample output for further\r\ninformation of output format.\r\n\r\n\r\nSample Input\r\n2\r\nwww.youtube.com 1\r\nwww.google.com 2\r\nwww.google.com.hk 3\r\nwww.alibaba.com 10\r\nwww.taobao.com 5\r\nwww.bad.com 10\r\nwww.good.com 7\r\nwww.fudan.edu.cn 8\r\nwww.university.edu.cn 9\r\nacm.university.edu.cn 10\r\nwww.youtube.com 1\r\nwww.google.com 2\r\nwww.google.com.hk 3\r\nwww.alibaba.com 11\r\nwww.taobao.com 5\r\nwww.bad.com 10\r\nwww.good.com 7\r\nwww.fudan.edu.cn 8\r\nacm.university.edu.cn 9\r\nacm.university.edu.cn 10\r\n\r\n\r\nSample Output\r\nCase #1:\r\nwww.alibaba.com\r\nwww.bad.com\r\nacm.university.edu.cn\r\nCase #2:\r\nwww.alibaba.com', 'collected', '2\r\nwww.youtube.com 1\r\nwww.google.com 2\r\nwww.google.com.hk 3\r\nwww.alibaba.com 10\r\nwww.taobao.com 5\r\nwww.bad.com 10\r\nwww.good.com 7\r\nwww.fudan.edu.cn 8\r\nwww.university.edu.cn 9\r\nacm.university.edu.cn 10\r\nwww.youtube.com 1\r\nwww.google.com 2\r\nwww.google.com.hk 3\r\nwww.alibaba.com 11\r\nwww.taobao.com 5\r\nwww.bad.com 10\r\nwww.good.com 7\r\nwww.fudan.edu.cn 8\r\nacm.university.edu.cn 9\r\nacm.university.edu.cn 10', 'Case #1:\r\nwww.alibaba.com\r\nwww.bad.com\r\nacm.university.edu.cn\r\nCase #2:\r\nwww.alibaba.com\r\n', 'Case 1: 7345056\nCase 2: 7345056\n'),
(21, 'Problem make problem', NULL, NULL, NULL, NULL, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `code`
--

CREATE TABLE `code` (
  `submit_name` varchar(50) DEFAULT NULL,
  `source_code` longtext DEFAULT NULL,
  `id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

--
-- Dumping data for table `code`
--

INSERT INTO `code` (`submit_name`, `source_code`, `id`) VALUES
('sumi', '#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int t, a, b;\r\n    long long sum;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        cin>>a>>b;\r\n        cout<<a+b<<\"\n\";\r\n    }\r\n\r\n\r\n}\r\n', 198),
('sumi', '#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int t, a, b;\r\n    long long sum;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        cin>>a>>b;\r\n        cout<<a+b+1<<\"\n\";\r\n    }\r\n\r\n\r\n}\r\n', 199),
('sumi', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 200),
('sumi', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 201),
('sumi', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 202),
('asdf', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 203),
('asdf', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 204),
('asdf', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 205),
('sumi', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 206),
('asma', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 207),
('sumi', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 208),
('sumi', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 209),
('asma', '#include<iostream>\r\n#include<string>\r\n#include<algorithm>\r\n#include<cmath>\r\n#define ll long long\r\nusing namespace std;\r\nint main()\r\n{\r\n	int n;cin>>n;\r\n	while(n--)\r\n	{\r\n		ll t;cin>>t;\r\n		ll a[t+10];\r\n		a[0]=0;	ll sum=0;\r\n		for(int i=1;i<=t;i++)\r\n		{\r\n			cin>>a[i];\r\n			if(a[i]>a[i-1]) sum+=(a[i]-a[i-1]);\r\n		}\r\n	\r\n		cout<<sum-1<<endl;	\r\n	}\r\n	return 0;\r\n}', 210),
('asma', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 211),
('asma', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 212),
('Tania', '#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    long long int t,a,b,c,d,n,i;\r\n    cin>>t;\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        cin>>a>>b>>c>>d;\r\n        if(abs(a-c)==abs(b-d))\r\n        {\r\n            cout<<\"Yes\"<<endl;\r\n        }\r\n        else\r\n        {\r\n            cout<<\"No\"<<endl;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n', 213),
('evana', '#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    long long int t,a,b,c,d,n,i;\r\n    cin>>t;\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        cin>>a>>b>>c>>d;\r\n        if(abs(a-c)==abs(b-d))\r\n        {\r\n            cout<<\"Yes\"<<endl;\r\n        }\r\n        else\r\n        {\r\n            cout<<\"No\"<<endl;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n', 214),
('zarin', '#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    long long int t,a,b,c,d,n,i;\r\n    cin>>t;\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        cin>>a>>b>>c>>d;\r\n        if(abs(a-c)==abs(b-d))\r\n        {\r\n            cout<<\"Yes\"<<endl;\r\n        }\r\n        else\r\n        {\r\n            cout<<\"No\"<<endl;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n', 215),
('fahim', '\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    long long int t,a,b,c,d,n,i;\r\n    cin>>t;\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        cin>>a>>b>>c>>d;\r\n        if(abs(a-c)==abs(b-d))\r\n        {\r\n            cout<<\"Yes\"<<endl;\r\n        }\r\n        else\r\n        {\r\n            cout<<\"No\"<<endl;\r\n        }\r\n    }\r\n    return 0;\r\n}', 216),
('rahim', '#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    long long int t,a,b,c,d,n,i;\r\n    cin>>t;\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        cin>>a>>b>>c>>d;\r\n        if(abs(a-c)==abs(b-d))\r\n        {\r\n            cout<<\"Yes\"<<endl;\r\n        }\r\n        else\r\n        {\r\n            cout<<\"No\"<<endl;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n', 217),
('sayma', '#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    long long int t,a,b,c,d,n,i;\r\n    cin>>t;\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        cin>>a>>b>>c>>d;\r\n        if(abs(a-c)==abs(b-d))\r\n        {\r\n            cout<<\"Yes\"<<endl;\r\n        }\r\n        else\r\n        {\r\n            cout<<\"No\"<<endl;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n', 218),
('israt', '#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    long long int t,a,b,c,d,n,i;\r\n    cin>>t;\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        cin>>a>>b>>c>>d;\r\n        if(abs(a-c)==abs(b-d))\r\n        {\r\n            cout<<\"Yes\"<<endl;\r\n        }\r\n        else\r\n        {\r\n            cout<<\"No\"<<endl;\r\n        }\r\n    }\r\n    return 0;\r\n}', 219),
('israt', '#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    long long int t,a,b,c,d,n,i;\r\n    cin>>t;\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        cin>>a>>b>>c>>d;\r\n        if(abs(a-c)==abs(b-d))\r\n        {\r\n            cout<<\"Yes\"<<endl;\r\n        }\r\n        else\r\n        {\r\n            cout<<\"No\"<<endl;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n', 220),
('israt', '#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    long long int t,a,b,c,d,n,i;\r\n    cin>>t;\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        cin>>a>>b>>c>>d;\r\n        if(abs(a-c)==abs(b-d))\r\n        {\r\n            cout<<\"Yes\"<<endl;\r\n        }\r\n        else\r\n        {\r\n            cout<<\"No\"<<endl;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n', 221),
('israt', '#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    long long int t,a,b,c,d,n,i;\r\n    cin>>t;\r\n    for(i=1;i<=t;i++)\r\n    {\r\n        cin>>a>>b>>c>>d;\r\n        if(abs(a-c)==abs(b-d))\r\n        {\r\n            cout<<\"Yes\"<<endl;\r\n        }\r\n        else\r\n        {\r\n            cout<<\"No\"<<endl;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n', 222),
('Rabeya', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 223),
('Rabeya', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 224),
('Rabeya', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 225),
('Rabeya', '#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,i,j,n,sum;\r\n    scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        sum=0;\r\n        scanf(\"%d %d\",&a,&b);\r\n        sum=sum+a+b;\r\n        printf(\"Case %d: %d\n\",i,sum);\r\n    }\r\n    return 0;\r\n\r\n}\r\n', 226);

-- --------------------------------------------------------

--
-- Table structure for table `status`
--

CREATE TABLE `status` (
  `username` varchar(50) DEFAULT NULL,
  `result` varchar(50) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

-- --------------------------------------------------------

--
-- Table structure for table `submission`
--

CREATE TABLE `submission` (
  `sid` int(11) NOT NULL,
  `sname` varchar(50) DEFAULT NULL,
  `verdict` varchar(50) DEFAULT NULL,
  `pbname` varchar(500) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

--
-- Dumping data for table `submission`
--

INSERT INTO `submission` (`sid`, `sname`, `verdict`, `pbname`) VALUES
(198, 'sumi', 'Accepted', 'Just Find Sum'),
(199, 'sumi', 'Wrong Answer', 'Just Find Sum'),
(200, 'sumi', 'Wrong Answer', 'Google feeling lucky.'),
(201, 'sumi', 'Accepted', 'Greetings'),
(202, 'sumi', 'Accepted', 'Greetings'),
(203, 'asdf', 'Accepted', 'Greetings'),
(204, 'asdf', 'Accepted', 'Greetings'),
(205, 'asdf', 'Accepted', 'Greetings'),
(206, 'sumi', 'Wrong Answer', 'Greetings'),
(207, 'asma', 'Accepted', 'Greetings'),
(208, 'sumi', 'Wrong Answer', 'Greetings'),
(209, 'sumi', 'Wrong Answer', 'Greetings'),
(210, 'asma', 'Wrong Answer', 'Chip and Ribbon'),
(211, 'asma', 'Accepted', 'Greetings'),
(212, 'asma', 'Accepted', 'Greetings'),
(213, 'Tania', 'Accepted', 'Alice And ChessBoard'),
(214, 'evana', 'Accepted', 'Alice And ChessBoard'),
(215, 'zarin', 'Accepted', 'Alice And ChessBoard'),
(216, 'fahim', 'Accepted', 'Alice And ChessBoard'),
(217, 'rahim', 'Accepted', 'Alice And ChessBoard'),
(218, 'sayma', 'Accepted', 'Alice And ChessBoard'),
(219, 'israt', 'Accepted', 'Alice And ChessBoard'),
(220, 'israt', 'Accepted', 'Alice And ChessBoard'),
(221, 'israt', 'Accepted', 'Alice And ChessBoard'),
(222, 'israt', 'Accepted', 'Alice And ChessBoard'),
(224, 'Rabeya', 'Accepted', 'Greetings'),
(225, 'Rabeya', 'Accepted', 'Greetings'),
(226, 'Rabeya', 'Accepted', 'Greetings');

-- --------------------------------------------------------

--
-- Table structure for table `user`
--

CREATE TABLE `user` (
  `name` varchar(40) NOT NULL DEFAULT '',
  `pass` varchar(40) DEFAULT NULL,
  `status` varchar(50) DEFAULT 'student',
  `email` varchar(100) NOT NULL DEFAULT ''
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

--
-- Dumping data for table `user`
--

INSERT INTO `user` (`name`, `pass`, `status`, `email`) VALUES
('as', 'f970e2767d0cfe75876ea857f92e319b', 'user', 'as@gmail.com'),
('asdf', '912ec803b2ce49e4a541068d495ab570', 'user', 'asdf@gmal.com'),
('asdfs', '42728ff2118430bdff5f9a189e0034ec', 'user', 'asdfs@gmail.com'),
('asma', 'cecf3f6ef580b00b98fe3b77b96ee5f3', 'user', 'asma@gmail.com'),
('dddt', '41c9f3c8c0769e880aa2c05eef82f967', 'user', 'dddttt@gmail.com'),
('ddt123', '25f9e794323b453885f5181f1b624d0b', 'user', 'ddt@gmail.com'),
('evana', '3c707c23ec4ff0097826fd7bbd41d53f', 'user', 'evana@gmail.com'),
('fahim', 'fc0a2e927ea113fab76b5b3979ce31dd', 'user', 'fahim@gmail.com'),
('ghjk1234', 'ff3ebe70b3d2ec2636d0f4883ae1f45e', 'user', 'ghjk@gmail.com'),
('israt', '15cb9f60462c59df48d2dd8867c479e9', 'user', 'israt@gmail.com'),
('nihan', '44fd7b13122f845eedd0c4d2b6d67934', 'user', 'nihan@gmail.com'),
('Rabeya', 'e82f9ba3945d5693f46219bb2d32edf6', 'user', 'rabeya@gmail.com'),
('rahim', '1980a3d156c896cbb880d4e759a779be', 'user', 'rahim@gmail.com'),
('rihan', '35c1127e0a9eb8fe9c139c3a48315648', 'user', 'rihan@gmail.com'),
('rrr', 'ee867a1373eef962831e4640189d86bc', 'user', 'rrrsss@gmail.com'),
('sayma', '418a5241214c6c72ea2f108c6a8dd488', 'user', 'sayma@gmail.com'),
('sumi', 'a52eb3f5da9d81b0d010bc83ad95c9dc', 'user', 'sumii.rabb@gmail.com'),
('sumii', '6ce80ab30667514ad113d559281a5203', 'user', 'sumii@gmail.com'),
('Tania', '49082bf56a658bc8a635f4d61517bace', 'user', 'Tania@gmail.com'),
('tanu', '930acc16255ec00483fb2aeaeedfc2c1', 'user', 'tanu@gmail.com'),
('Tazrin', '6d281addb742fb758ece45426969c88e', 'user', 'Tazrin@gmail.com'),
('tdd', 'c99be2fba8e12fef5d6c73e009212df4', 'user', 'ttdd@gmail.com'),
('Wasir', '28462d2dd0b91d50bb9170ab466f32f2', 'user', 'warm@gmail.com'),
('www123', '0a2e0a09650c58ea81482299b6c982a6', 'user', 'www@gmail.com'),
('zarin', 'da26afec7da539ae3b01779ac09b8236', 'user', 'zarin@gmail.com'),
('zc', '92a870e23eaac7b3c576e91b807f2a60', 'user', 'zc@gmail.com'),
('zihan', 'a9b5561f718650778f568c58b673539e', 'user', 'zihan@gmail.com'),
('zx', 'e6c760b3216a51c656c5861d72d5bf62', 'user', 'zx@gmail.com');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `archieve`
--
ALTER TABLE `archieve`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `code`
--
ALTER TABLE `code`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `submission`
--
ALTER TABLE `submission`
  ADD PRIMARY KEY (`sid`);

--
-- Indexes for table `user`
--
ALTER TABLE `user`
  ADD PRIMARY KEY (`name`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `archieve`
--
ALTER TABLE `archieve`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1224;

--
-- AUTO_INCREMENT for table `code`
--
ALTER TABLE `code`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=227;

--
-- AUTO_INCREMENT for table `submission`
--
ALTER TABLE `submission`
  MODIFY `sid` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=227;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
